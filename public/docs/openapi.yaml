openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: augusta34@example.org
                password:
                  type: string
                  description: ''
                  example: '89v?zgFz]-"/]5wk?+'
                password_confirmation:
                  type: string
                  description: ''
                  example: modi
              required:
                - name
                - email
                - password
                - password_confirmation
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: kwunsch@example.com
                password:
                  type: string
                  description: ''
                  example: Pau6b|aeZyA7Y
              required:
                - email
                - password
  /api/stmts:
    post:
      summary: 'Создание заявки.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: non
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: prosacco.devan@example.com
                message:
                  type: string
                  description: ''
                  example: aspernatur
              required:
                - name
                - email
                - message
  '/api/stmts/{id}':
    put:
      summary: 'Обновить заявку.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: pariatur
                email:
                  type: string
                  description: ''
                  example: dolor
                message:
                  type: string
                  description: ''
                  example: nihil
                comment:
                  type: string
                  description: ''
                  example: illo
              required:
                - name
                - email
                - message
                - comment
    delete:
      summary: 'Удалить заявку.'
      operationId: ''
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the stmt.'
        example: 4
        required: true
        schema:
          type: integer
  '/api/doSomething/{param}':
    post:
      summary: 'Do something'
      operationId: doSomething
      description: 'This endpoint allows you to do something.'
      parameters:
        -
          in: query
          name: speed
          description: 'How fast the thing should be done. Can be `slow` or `fast`.'
          example: fast
          required: false
          schema:
            type: string
            description: 'How fast the thing should be done. Can be `slow` or `fast`.'
            example: fast
      responses:
        200:
          description: 'When the thing was done smoothly.'
          content:
            application/json:
              schema:
                type: object
                example:
                  hey: 'ho ho ho'
                properties:
                  hey:
                    type: string
                    example: 'ho ho ho'
                    description: 'Who knows?'
      tags:
        - 'The group the endpoint belongs to. Can be a new group or an existing group.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                something:
                  type: array
                  description: 'The things we should do.'
                  example:
                    - 'string 1'
                    - 'string 2'
                  items:
                    type: string
              required:
                - something
      security: []
    parameters:
      -
        in: path
        name: param
        description: 'A URL param for no reason.'
        example: 2
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'The group the endpoint belongs to. Can be a new group or an existing group.'
    description: "A description for the group. You don't need to set this for every endpoint; once is enough."
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
